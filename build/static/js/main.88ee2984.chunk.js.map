{"version":3,"sources":["request/fetch.js","App.js","hooks/usePetFetcher.jsx","index.js"],"names":["get","url","query","a","fetch","cache","credentials","method","mode","redirect","referrer","then","response","status","json","data","catch","err","console","error","msg","App","dataList","props","useState","setData","useEffect","res","petList","reduce","acc","pets","gender","Array","isArray","forEach","pet","type","name","usePetFetcher","className","Object","keys","map","key","idx","ReactDOM","render","document","getElementById"],"mappings":"oNAAaA,EAAG,uCAAG,WAAOC,EAAKC,GAAZ,SAAAC,EAAA,+EACRC,MAAMH,EAAK,CACdI,MAAO,WACPC,YAAa,cACbC,OAAQ,MACRC,KAAM,OACNC,SAAU,SACVC,SAAU,gBAEbC,MAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OACT,OAAOD,EAASE,UAGvBH,MAAK,SAAAG,GAAI,MAAK,CACXD,QAAQ,EACRE,KAAMD,MAETE,OAAM,SAAAC,GAEH,OADAC,QAAQC,MAAM,OAAQF,GACf,CACHJ,QAAQ,EACRO,IAAKH,OAtBE,2CAAH,wD,eCyBDI,MAtBf,WACE,IAAMC,ECCqB,SAACC,GAC1B,MAAwBC,mBAAS,IAAjC,mBAAOT,EAAP,KAAaU,EAAb,KAmBA,OAjBAC,qBAAU,kBACN1B,EANI,qDAOHW,MAAK,SAAAgB,GACF,GAAIA,EAAId,OAAQ,CACZ,IAAMe,EAAUD,EAAIZ,MAAQ,GAC5BU,EAAQG,EAAQC,QAAO,SAACC,EAAD,GAA4B,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAOjC,OANID,GAAQE,MAAMC,QAAQH,IACtBA,EAAKI,SAAQ,SAAAC,GACI,QAAbA,EAAIC,OACCP,EAAIE,GAAJ,sBAAkBF,EAAIE,IAAW,IAAjC,CAAqCI,EAAIE,WAG/CR,IACR,WAGb,CAACP,IACIR,EDrBQwB,GAYjB,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SAXKC,OAAOC,KAAKpB,GAAUqB,KAAI,SAAAC,GAC/B,OAAO,oCACL,6BAAMA,IACN,6BACItB,EAASsB,GAAKD,KAAI,SAACL,EAAMO,GAAP,OAAe,6BAAuBP,GAAdA,EAAOO,UAHlCD,WEH3BE,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,W","file":"static/js/main.88ee2984.chunk.js","sourcesContent":["export const get = async (url, query) => {\n    return fetch(url, {\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        method: 'GET',\n        mode: 'cors',\n        redirect: 'follow',\n        referrer: 'no-referrer',\n      })\n    .then((response) => {\n        if (response.status === 200) {\n            return response.json()\n        }\n    })\n    .then(json => ({\n        status: true,\n        data: json\n    }))\n    .catch(err => {\n        console.error('err:', err)\n        return {\n            status: false,\n            msg: err\n        }\n    })\n}\n\n","import { usePetFetcher } from './hooks'\nimport './App.css';\n\nfunction App() {\n  const dataList = usePetFetcher()\n\n  const petRender = () => {\n    return Object.keys(dataList).map(key => {\n      return <section key={key}>\n        <h2>{ key }</h2>\n        <ul>\n          { dataList[key].map((name, idx) => <li key={name + idx}>{ name }</li>) }\n        </ul>\n      </section>  \n    })\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        { petRender() }\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\"\nimport { get } from '../request'\n\nconst url = 'http://5c92dbfae7b1a00014078e61.mockapi.io/owners'\n\nexport const usePetFetcher = (props) => {\n    const [data, setData] = useState({})\n\n    useEffect(() => \n        get(url)\n        .then(res => {\n            if (res.status) {\n                const petList = res.data || []\n                setData(petList.reduce((acc, { pets, gender }) => {\n                    if (pets && Array.isArray(pets)) {\n                        pets.forEach(pet => {\n                            pet.type === 'Cat' && \n                                (acc[gender] = [...acc[gender] || [], pet.name])\n                        })\n                    }\n                    return acc\n                }, {}))\n            } \n        })\n    , [props])\n    return data;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}